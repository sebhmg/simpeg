#SimPEG: Simulation and Parameter Estimation in Geophysics
#
#SimPEG is a python package for simulation and gradient based
#parameter estimation in the context of geophysical applications.

[tool.poetry]
name = "Mira-SimPEG"
version = "0.21.2.1-alpha.1"
license = "MIT"
description = "Mira Geoscience fork of SimPEG: Simulation and Parameter Estimation in Geophysics"

authors = ["Rowan Cockett <rowanc1@gmail.com>", "dominiquef@mirageoscience.com"]
repository = "http://github.com/simpeg/simpeg"
documentation = "https://docs.simpeg.xyz/"
homepage = "http://simpeg.xyz/"
readme = "README.rst"
keywords = ["geophysics inverse problem"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

exclude = ["tests*", "examples*", "tutorials*"]

include = [
    { path = "COPYING", format = ["sdist", "wheel"] },
    { path = "COPYING.LESSER", format = ["sdist", "wheel"] },
    { path = "LICENSE", format = ["sdist", "wheel"] },
    { path = "README.rst", format = ["sdist", "wheel"] },
    { path = "THIRD_PARTY_SOFTWARE.rst", format = ["sdist", "wheel"] },
    { path = "docs/**/THIRD_PARTY_SOFTWARE.rst", format = ["sdist", "wheel"] },
]

[tool.poetry.dependencies]
discretize = ">=0.8.0"
empymod = ">=2.0.0"
geoana = "*"
matplotlib = "*"
numpy = ">=1.20"
mkl = "2023.2.0"  # from simpeg
pydiso = "~0.0.4"  # from simpeg
tbb = "2021.12.0"
tzdata = "2023.4"  # through pandas from SimPEG
intel-openmp = "2023.2.0"  # from simpeg
pandas = "*"
pymatsolver = ">=0.2"
scikit-learn = ">=1.2"
scipy = ">=1.8.0"

dask = {version = "*", extras = ["distributed"], optional = true}
distributed = {version = "*", optional = true}
fsspec = {version = ">=0.3.3", optional = true}
zarr = {version = "*", optional = true}

## Pip dependencies from Git repositories
#----------------------------------------
#geoh5py = {version = "~0.9.0rc1", source = "pypi", allow-prereleases = true}
geoh5py = {url = "https://github.com/MiraGeoscience/geoh5py/archive/refs/heads/develop.zip"}
#geoh5py = {url = "http://localhost:8888/geoh5py.tar.gz#sha256="}


[tool.poetry.group.dev.dependencies]
black = "*"
jupyter = "*"
memory_profiler = {source="pypi", version="*"}
pillow = "*"
plotly = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
scooby = "*"
sphinx = "*"
sphinx-gallery = ">=0.1.13"
sphinx_rtd_theme = "*"
sphinxcontrib-napoleon = "*"
sympy = "*"
toolz = "*"
twine = "*"

[tool.poetry.extras]
dask = [
    "dask",
    "distributed",
    "fsspec",
    "zarr",
]

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge', 'intel']

[tool.black]
# defaults are just fine

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
